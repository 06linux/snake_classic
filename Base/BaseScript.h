/* *  BaseScript.h *  CCGame * *  Created by linux_wuliqiang@163.com on 2015-03-30. *  Copyright 2015 Beijing. All rights reserved. * *	脚本文件格式解析模块封装 * */#ifndef __BaseScript_H__#define __BaseScript_H__/** *  一个脚本文件数据 *   *  脚本文件的格式： *  1> 存在 () 的行认为是 函数调用, 例如： LoadNpc(1,2,4)， 函数调用解析后数据格式，使用逗号分割，例如：“LoadNpc,1,3,4” *  2> 存在 = 的行，认为是变量赋值， 例如： num = 100 * * * */class BaseScript{public:    BaseScript(const char* _fileName);    virtual ~BaseScript();    public:        /*     *  将所有的脚本逻辑，一次执行完     */    void RunAll();        /*     *  执行一次脚本逻辑 （执行一行脚本）     *     *  返回，当前脚本执行的行数, 返回 -1，表示当前脚本已经执行完成     */    int RunOne();            /*     *  得到脚本文件名称     */    const char* GetFileName();        /*     *  得到脚本中，执行函数的次数     *  _funName, 函数名称     */    int GetFunctionNum(const char* _funName);              /*     *  设置一个脚本变量， 或者新增一个脚本变量     */    void SetVar(const char* _key, const char* _value);        /*     *  得到脚本变量     */    const char* GetVar(const char* _key);        /*     *  删除脚本变量     */    void DelVar(const char* _key);        /**     *   打印输出当前脚本中的数据信息     */    void PrintData();    protected:        /**     *   执行函数调用逻辑     */    virtual void RunScriptFun(const char* _funData);        /**     * 执行变量赋值逻辑     */    virtual void RunScriptVarSet(const char* _key, const char* _value);        /*     * 当前脚本运行结束后，回调次函数     */    virtual void RunScriptFinish(const char* _fileName);    protected:        /*     *  解析脚本文件     */    void PraseFile(const char* _fileName);        /*     *  解析函数调用数据     */    void PraseFunction(const char* _lineStr);        /*     *  解析变量设置数据     */    void PraseVar(const char* _lineStr);        /*     *  当前行是否是函数调用数据     */    bool IsFunction(const char* _lineStr);        /*     *  当前行是否是变量设置     */    bool IsVarSet(const char* _lineStr);        private:        char*               m_fileName;         // 脚本对应的文件名称    vector<string>      m_lineData;         // 存储脚本中，每一行的字符串数据        map<string,string>  m_var;              // 脚本变量的定义 （所有定义的脚本变量，都会放到此容器中）        int                 m_lineCurr;         // 当前脚本执行到第几行    int                 m_lineMax;          // 当前脚本的最大行数       };#endif  // __BaseScript_H__