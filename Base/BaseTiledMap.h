/* *  BaseTiledMap.h *  CCGame * *  Created by linux_wuliqiang@163.com on 2015-04-08. *  Copyright 2012 Beijing. All rights reserved. * *	游戏地图模块抽象封装-- 对应 tiled 工具 *//* *	游戏中，可以复用的函数的封装，工具函数的封装 * * * 注意：1>	地图缩放的时候，只是在屏幕显示的时候进行了处理，地图上，所有对象的数据坐标都时跟缩放前保持一致， *			也就是说，地图缩放后，不用对 地图切片大小进行单独处理。 一切按照正常状态下处理就可以。 *		2>	地图显示的时候，是以 "左下角" 点为锚点的, 注意 *		3>  地图生成工具： 地图工具在使用的时候， 一个土层，只能使用一个图片生成的的切片信息。 *			不能将多个图片的切片在一个土层中使用。要不如，加载的时候，抛出异常。(地图编辑器的局限性) *		4>  地图资源一律采用高清资源， ipad 和 iphone4 版本使用 正常数据显示，  iphone3 版本，图片资源统一缩小一半 *			注意：iphone4 环境中， 图片资源采用 960x640 的大小， 坐标系统仍旧使用 480x320 的坐标，系统会自动计算坐标信息 *				 也就是说， iphone3, iphone4 的坐标都是按照 480x320 的大小位置进行计算就可以 * *		5>  注意，如果地图层中，遮挡对象加的太多，会严重影响刷屏幕的帧数 */#ifndef __BaseTiledMap_H__#define __BaseTiledMap_H__#include "cocos2d.h"using namespace cocos2d;class BaseTiledMap : public TMXTiledMap{public:    static BaseTiledMap* create(const std::string& tmxFile);    protected:    	BaseTiledMap();	virtual ~BaseTiledMap();    public:        // 坐标转换    Vec2     PointSwitch_MapGrid2Pos(Vec2 _mapGrid);          // 地图网格坐标--> 地图像素坐标(网格中心点对应的像素坐标)    Vec2     PointSwitch_Pos2MapGrid(Vec2 _mapPos);           // 地图像素坐标--> 地图网格坐标        Vec2     PointSwitch_MapGrid2Screen(Vec2 _mapGrid);       // 地图网格坐标--->屏幕坐标    Vec2     PointSwitch_Screen2MapGrid(Vec2 _screenPos);     // 屏幕坐标---> 地图网格坐标        Vec2     PointSwitch_Screen2Map(Vec2 _screenPos);         // 屏幕坐标 --> 地图坐标    Vec2     PointSwitch_Map2Screen(Vec2 _mapPos);            // 地图坐标 --> 屏幕坐标        /*     *	地图移动，根据地图中角色的位置，得到地图的坐标位置     *     *    _roleMapPos:  主角在地图坐标系中的坐标 （显示的焦点位置）     *          返回值:      地图偏移坐标（地图左下角，在屏幕坐标系中的坐标）     *     *           备注:  地图不可以设置锚点，地图坐标，就是地图的左下角坐标     */    Vec2     MapMove_PositionGet(Vec2 _roleMapPos);    void     MapMove_PositionSet(Vec2 _roleMapPos);        // 得到地图指定图层上，图块对应图片资源的切片id    int      GetTileGID(const std::string& _layerName, Vec2 _mapGrid);        /*     * 得到地图切片的属性数据 （需要在地图切片中，设置属性）     *     * 使用代码参考：     * Value vPro = m_map->GetGidProperties(1, "addnpcid");     * if(vPro.getType() != Value::Type::NONE)     * {     *     CCLOG("addnpcId = %d", vPro.asInt());     * }     *     */    Value    GetGidProperties(int _gid, const std::string _key);        // 计算当前地图现实在指定大小空间内地缩放系数, _fixWH 为 true 表示， 防止地图变形， x,y 方向缩放系数相同    Vec2     GetScale(cocos2d::Size _showSize, bool _fixWH = true); public: // 数据成员        float                   m_mapScale;         // 地图缩放系数    cocos2d::Size           m_mapSize;          // 地图大小    cocos2d::Size           m_mapTileSize;      // 地图切片大小    Vec2                    m_mapOff;           // 地图便宜设置（游戏逻辑使用）            int                     m_LocatW;           // 触发地图移动的宽高 --- 当前主角位置距离屏幕边界小于 此数值时，才会更新移动    int                     m_LocatH;    public:   // 成员函数        int             loadMap(const std::string& _strMapName);                        	};#endif // __BaseTiledMap_H__